{"version":3,"file":"static/js/902.7156e52f.chunk.js","mappings":"oOAEaA,GAAOC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,kd,SCAJE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OAAO,SAACL,EAAD,CAAMI,GAAIA,EAAV,SAAeC,GACvB,E,6CCJYC,EAAc,mCAAG,WAAOC,GAAP,uEAChB,mCADgB,kBAErBC,MAAM,sCAAD,OAC4BD,EAD5B,oBADA,mCACA,oBAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,eACvB,KAT2B,2CAAH,sDCCbC,EAAYf,EAAAA,EAAAA,IAAH,6DAITgB,EAAQhB,EAAAA,EAAAA,GAAH,0EAILiB,EAAIjB,EAAAA,EAAAA,EAAH,kDAGDkB,EAAWlB,EAAAA,EAAAA,GAAH,kDCiDtB,EAvDqB,WAAO,IAAD,IACjBmB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACRnB,EAAec,GACZX,MAAK,SAAAiB,GAEJF,EAAQE,EACT,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACR,IAEJ,IACMW,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,iCACE,SAAC/B,EAAD,CAAUC,GAAI2B,EAAd,mBACA,UAACf,EAAD,YACE,gBACEmB,IAAG,yCAAoCZ,EAAKa,aAC5CC,IAAI,SACJC,MAAM,QACNC,OAAO,WAET,4BACE,SAACtB,EAAD,UAAQM,EAAKiB,kBACb,SAACtB,EAAD,iCAAwC,GAApBK,EAAKkB,cAAmBC,QAAQ,GAApD,QACA,SAACvB,EAAD,wBACA,SAACD,EAAD,UAAIK,EAAKoB,YACT,SAACxB,EAAD,sBACA,SAACD,EAAD,UACGK,EAAKqB,OACFrB,EAAKqB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAjB,IACrB,oBAIV,oDACA,wBACE,SAAC,KAAD,CAAM3C,GAAG,OAAO6B,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,wBACE,SAAC,KAAD,CAAM3B,GAAG,UAAU6B,MAAO,CAAEC,KAAMH,GAAlC,wBAKF,SAAC,KAAD,MAGL,C","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","services/SearchMovieInfo.js","pages/MoveDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const Back = styled(Link)`\ndisplay: block;\nwidth: 100px;\ntext-align: center;\n  border: 1px solid #1f2833;\n  border-radius: 5px;\n  padding: 4px;\n  color: #1f2833;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus,\n  &.active {\n    color: #fa6704;\n    border: 1px solid #fa6704;\n    transform: scale(1.04);\n  }\n`;\n","\nimport { Back } from './BackLink.styled';\nexport const BackLink = ({ to, children }) => {\n  return <Back to={to}>{children}</Back>;\n};\n","export const fetchMovieInfo = async (id) => {\n  const KEY = 'd743fb6525879ac74e28dd3cdcf25139';\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`No results `));\n  });\n};\n","import styled from '@emotion/styled';\n export const FilmStand = styled.div`\n    display: flex;\n    gap: 15px;\n `\n export const Title = styled.h1`\n   text-align: center;\n   margin-bottom: 20px;\n `;\n export const P = styled.p`\n   margin-bottom: 20px;\n `;\n export const SubTitle = styled.h2`\n   margin-bottom: 20px;\n `;","import { BackLink } from 'components/BackLink/BackLink';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieInfo } from 'services/SearchMovieInfo';\nimport { FilmStand, Title, P, SubTitle } from './MoveDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [info, setInfo] = useState({});\n\n  useEffect(() => {\n    fetchMovieInfo(movieId)\n      .then(data => {\n        // console.log(data);\n        setInfo(data);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back</BackLink>\n      <FilmStand>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${info.poster_path}`}\n          alt=\"poster\"\n          width=\"300px\"\n          height=\"440px\"\n        />\n        <div>\n          <Title>{info.original_title}</Title>\n          <P>{`User Score: ${(info.vote_average * 10).toFixed(1)}%`}</P>\n          <SubTitle>Overview</SubTitle>\n          <P>{info.overview}</P>\n          <SubTitle>Geners</SubTitle>\n          <P>\n            {info.genres\n              ? info.genres.map(genre => genre.name + ' ')\n              : 'no genre'}\n          </P>\n        </div>\n      </FilmStand>\n      <h3>Additional information</h3>\n      <p>\n        <Link to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </Link>\n      </p>\n      <p>\n        <Link to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </Link>\n      </p>\n\n      <Outlet />\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["Back","styled","Link","BackLink","to","children","fetchMovieInfo","id","fetch","then","response","ok","json","Promise","reject","Error","FilmStand","Title","P","SubTitle","movieId","useParams","useState","info","setInfo","useEffect","data","catch","err","console","log","backLinkHref","useLocation","state","from","src","poster_path","alt","width","height","original_title","vote_average","toFixed","overview","genres","map","genre","name"],"sourceRoot":""}