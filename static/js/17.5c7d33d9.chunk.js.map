{"version":3,"file":"static/js/17.5c7d33d9.chunk.js","mappings":"sNAIaA,EAAOC,EAAAA,EAAAA,GAAH,sKAUJC,EAAOD,EAAAA,EAAAA,GAAH,+LAWJE,GAASF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,qEAINI,EAAQJ,EAAAA,EAAAA,IAAH,gJAULK,EAAQL,EAAAA,EAAAA,GAAH,uG,SCrCLM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC9B,OACE,SAACZ,EAAD,WACE,SAACC,EAAD,CAAQY,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA5C,UACE,UAACJ,EAAD,YACE,gBACEa,IAAG,yCAAoCL,GACvCM,IAAKL,KAEP,SAACR,EAAD,UAAQQ,UAPHF,EAYd,OAIR,C,iICzBYQ,EAAW,mCAAG,WAAOC,GAAP,uEACb,mCADa,kBAElBC,MAAM,qDAAD,OADA,mCACA,iCACuED,EADvE,gCAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,eACvB,KATwB,2CAAH,sD,kBCCXC,EAAe7B,EAAAA,EAAAA,OAAH,icAkBZ8B,EAAO9B,EAAAA,EAAAA,KAAH,qbAuBJ+B,EAAS/B,EAAAA,EAAAA,OAAH,koB,SCxCNgC,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBAC1B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcMC,EAAQ,WACZD,EAAW,GACZ,EACD,OACE,+BACE,SAACP,EAAD,WACE,UAACC,EAAD,CAAMQ,SAdO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EACuB,KAA3BF,EAAEG,OAAOP,QAAQQ,MAAe,CAAEC,KAAML,EAAEG,OAAOP,QAAQQ,OAAU,CAAC,EACtEV,EAAkBQ,GAClBJ,GACC,EAQG,WACE,kBACEO,KAAK,UACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZL,MAAOR,EACPc,SA3BS,SAAAV,GACjB,IAAQI,EAAUJ,EAAEW,cAAZP,MACRP,EAAWO,EACV,KA0BK,SAACZ,EAAD,CAAQc,KAAK,SAAb,UACE,6CAMX,E,SCbD,EArBe,WACb,OAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCnB,EAAAA,EAAAA,UAAS,IAA7C,eAAOoB,EAAP,KAAmBC,EAAnB,KACMC,EAAYJ,EAAaK,IAAI,QAUnC,OARAC,EAAAA,EAAAA,YAAU,WACJF,GACFrC,EAAYqC,GAAWlC,MAAK,SAAAqC,GAC1BJ,EAAcI,EAAKC,QACpB,GAEJ,GAAE,CAACJ,KAGF,6BACE,SAACxB,EAAD,CAAWC,kBAAmBoB,KAC9B,oCACA,SAAC/C,EAAA,EAAD,CAAYC,OAAQ+C,MAGzB,C","sources":["components/MoviesList/MoviesList.stuled.jsx","components/MoviesList/MoviesList.jsx","services/SearchMovie.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 0;\n  padding: 0 0 20px 0;\n`;\n\nexport const Card = styled.li`\n  border-radius: 10px;\n  overflow: hidden;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.04);\n  }\n`;\n\nexport const LinkTo = styled(Link)`\n  text-decoration: none;\n  color: #1f2833;\n`;\nexport const Stand = styled.div`\n  width: 250px;\n  height: 440px;\n  background-color: #fafafa;\n\n  img {\n    width: 250px;\n    height: 375px;\n  }\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 0;\n  padding: 10px 5px;\n  font-size: 16px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Card, LinkTo, Stand, Title } from './MoviesList.stuled';\nexport const MoviesList = ({ Movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {Movies.map(({ id, poster_path, title }) => {\n          return (\n            <Card key={id}>\n              <LinkTo to={`/movies/${id}`} state={{ from: location }}>\n                <Stand>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={title}\n                  />\n                  <Title>{title}</Title>\n                </Stand>\n              </LinkTo>\n            </Card>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","export const fetchMovies = async (search) => {\n  const KEY = 'd743fb6525879ac74e28dd3cdcf25139';\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${search}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`No results `));\n  });\n};","import styled from '@emotion/styled';\nexport const SearchbarHed = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 54px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #fa6704;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n  input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  /* background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg'); */\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n  /* span {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  } */\n`;\n","import { useState } from 'react';\nimport { Form, SearchbarHed, Button } from './Searchbar.styled';\nexport const Searchbar = ({ onSetSearchParams }) => {\n  const [request, setRequest] = useState('');\n  const writeInput = e => {\n    const { value } = e.currentTarget;\n    setRequest(value);\n    };\n    \n  const formSubmit = e => {\n    e.preventDefault();\n    const nextParams =\n      e.target.request.value !== '' ? { name: e.target.request.value } : {};\n    onSetSearchParams(nextParams);\n    reset();\n    };\n    \n  const reset = () => {\n    setRequest('');\n  };\n  return (\n    <>\n      <SearchbarHed>\n        <Form onSubmit={formSubmit}>\n          <input\n            name=\"request\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={request}\n            onChange={writeInput}\n          />\n          <Button type=\"submit\">\n            <span>Search</span>\n          </Button>\n        </Form>\n      </SearchbarHed>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/SearchMovie';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [dataMovies, setDataMovies] = useState([]);\n  const movieName = searchParams.get('name');\n\n  useEffect(() => {\n    if (movieName) {\n      fetchMovies(movieName).then(data => {\n        setDataMovies(data.results);\n      });\n    }\n  }, [movieName]);\n\n  return (\n    <main>\n      <Searchbar onSetSearchParams={setSearchParams} />\n      <h1>movies</h1>\n      <MoviesList Movies={dataMovies} />\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["List","styled","Card","LinkTo","Link","Stand","Title","MoviesList","Movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","fetchMovies","search","fetch","then","response","ok","json","Promise","reject","Error","SearchbarHed","Form","Button","Searchbar","onSetSearchParams","useState","request","setRequest","reset","onSubmit","e","preventDefault","nextParams","target","value","name","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","useSearchParams","searchParams","setSearchParams","dataMovies","setDataMovies","movieName","get","useEffect","data","results"],"sourceRoot":""}